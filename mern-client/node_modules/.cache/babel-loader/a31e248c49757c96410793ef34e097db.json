{"ast":null,"code":"import { GET_ERRORS } from './types';\nimport { SET_CURRENT_USER } from './types';\nimport axios from 'axios';\nimport setAuthToken from '../utilities/setAuthToken';\nimport jwt_decode from 'jwt-decode'; //register the user\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post('/api/users/register', userData).then(function (res) {\n      return history.push('/login');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //if user's jwt token fetch\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('api/users/login', userData).then(function (res) {\n      ///save to local storage\n      var token = res.data.token; //set token LS\n\n      localStorage.setItem('jwtToken', token); //Set auth header\n\n      setAuthToken(token); //Decode token to exfiltrate user info\n\n      var decoded = jwt_decode(token); //Set current user\n\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Set the current User\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; //User logout\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    //delete token\n    localStorage.removeItem('jwtToken'); //delete the auth header\n\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/actions/authActions.js"],"names":["GET_ERRORS","SET_CURRENT_USER","axios","setAuthToken","jwt_decode","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,SAASA,UAAT,QAA2B,SAA3B;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAC3DN,IAAAA,KAAK,CAACO,IAAN,CAAW,qBAAX,EAAkCH,QAAlC,EACCI,IADD,CACM,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAAJ;AAAA,KADT,EAECC,KAFD,CAEO,UAAAC,GAAG;AAAA,aAAIN,QAAQ,CAAC;AACnBO,QAAAA,IAAI,EAAEf,UADa;AAEnBgB,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFH,OAAD,CAAZ;AAAA,KAFV;AAMH,GAP2B;AAAA,CAArB,C,CASP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACb,QAAD;AAAA,SAAc,UAAAE,QAAQ,EAAI;AAC/CN,IAAAA,KAAK,CAACO,IAAN,CAAW,iBAAX,EAA8BH,QAA9B,EACCI,IADD,CACM,UAAAC,GAAG,EAAI;AACT;AADS,UAEDS,KAFC,GAEST,GAAG,CAACO,IAFb,CAEDE,KAFC,EAGT;;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJS,CAKT;;AACAjB,MAAAA,YAAY,CAACiB,KAAD,CAAZ,CANS,CAOT;;AACA,UAAMG,OAAO,GAAGnB,UAAU,CAACgB,KAAD,CAA1B,CARS,CAST;;AACAZ,MAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AAAkC,KAXtC,EAWwCV,KAXxC,CAW8C,UAAAC,GAAG;AAAA,aAAIN,QAAQ,CAAC;AAC1DO,QAAAA,IAAI,EAAEf,UADoD;AAE1DgB,QAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFoC,OAAD,CAAZ;AAAA,KAXjD;AAakC,GAdb;AAAA,CAAlB,C,CAgBC;;AACR,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAa;AACvC,SAAO;AACHR,IAAAA,IAAI,EAAEd,gBADH;AAEHe,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAjB,QAAQ,EAAI;AACxC;AACAa,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB,EAFwC,CAGxC;;AACAvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,IAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GANyB;AAAA,CAAnB","sourcesContent":["import { GET_ERRORS } from './types';\nimport { SET_CURRENT_USER } from './types';\nimport axios  from 'axios';\nimport setAuthToken from '../utilities/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\n//register the user\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post('/api/users/register', userData)\n    .then(res => history.push('/login'))\n    .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n    }));\n};\n\n//if user's jwt token fetch\nexport const loginUser = (userData) => dispatch => {\n    axios.post('api/users/login', userData)\n    .then(res => {\n        ///save to local storage\n        const { token } = res.data;\n        //set token LS\n        localStorage.setItem('jwtToken', token);\n        //Set auth header\n        setAuthToken(token); \n        //Decode token to exfiltrate user info\n        const decoded = jwt_decode(token);\n        //Set current user\n        dispatch(setCurrentUser(decoded))}).catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data}))};\n\n        //Set the current User\nexport const setCurrentUser = (decoded) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\n//User logout\nexport const logoutUser = () => dispatch => {\n    //delete token\n    localStorage.removeItem('jwtToken');\n    //delete the auth header\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};"]},"metadata":{},"sourceType":"module"}