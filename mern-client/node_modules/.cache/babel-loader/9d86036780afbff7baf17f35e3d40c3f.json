{"ast":null,"code":"import _classCallCheck from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/eugene/MERN/mern-client/src/components/post/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/spinner';\nimport { getPost } from '../../actions/postActions';\nimport Posts from '../../components/posts/Posts';\nimport PostItem from '../posts/PostItem';\nimport { Link } from 'react-router-dom';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Post).apply(this, arguments));\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPost(this.props.match.params.id);\n    } //end componentDidMount\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          post = _this$props.post,\n          loading = _this$props.loading;\n      var postContent;\n      post === null || loading || Object.keys(post) === 0 ? postContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }) : postContent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(PostItem, {\n        post: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })); //end postContent\n\n      return React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/feed\",\n        className: \"btn btn-light mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Back to Posts feed\"), postContent)))); //end return\n    } //end render\n\n  }]);\n\n  return Post;\n}(Component); //end class Post\n\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n}; //end mapStateToProps\n\n\nexport default connect(mapStateToProps, {\n  getPost: getPost\n})(Post);","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/components/post/Post.js"],"names":["React","Component","connect","PropTypes","Spinner","getPost","Posts","PostItem","Link","Post","props","match","params","id","post","loading","postContent","Object","keys","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,I;;;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWL,OAAX,CAAmB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACH,K,CAAA;;;;6BACM;AAAA,wBACmB,KAAKH,KADxB;AAAA,UACCI,IADD,eACCA,IADD;AAAA,UACOC,OADP,eACOA,OADP;AAEP,UAAIC,WAAJ;AAEEF,MAAAA,IAAI,KAAK,IAAT,IAAiBC,OAAjB,IAA4BE,MAAM,CAACC,IAAP,CAAYJ,IAAZ,MAAsB,CAApD,GACCE,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADf,GAECA,WAAW,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CAFhB,CAJO,CAOP;;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAiB,QAAA,SAAS,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAIKE,WAJL,CADJ,CADJ,CADJ,CADJ,CATO,CAsBN;AACF,K,CAAA;;;;;EA3BgBf,S,GA4BlB;;;AAEDQ,IAAI,CAACU,SAAL,GAAiB;AACbd,EAAAA,OAAO,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADX;AAEbP,EAAAA,IAAI,EAAEX,SAAS,CAACmB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADkB,GAAL;AAAA,CAA7B,C,CAEE;;;AAEF,eAAeZ,OAAO,CAACqB,eAAD,EAAkB;AAAClB,EAAAA,OAAO,EAAPA;AAAD,CAAlB,CAAP,CAAoCI,IAApC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/spinner';\nimport { getPost } from '../../actions/postActions';\nimport Posts from '../../components/posts/Posts';\nimport PostItem from '../posts/PostItem';\nimport { Link } from 'react-router-dom';\n\nclass Post extends Component {\n    componentDidMount(){\n        this.props.getPost(this.props.match.params.id)\n    }//end componentDidMount\n  render() {\n    const { post, loading } = this.props;\n    let postContent;\n\n    ( post === null || loading || Object.keys(post) === 0)\n    ?postContent = <Spinner />\n    :postContent = (<div><PostItem post={post} /></div>);\n    //end postContent\n    \n    return (\n        <div className=\"post\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <Link to=\"/feed\" className=\"btn btn-light mb-3\">\n                            Back to Posts feed\n                        </Link>\n                        {postContent}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )//end return\n  }//end render\n}//end class Post\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    post: state.post\n})//end mapStateToProps\n\nexport default connect(mapStateToProps, {getPost})(Post);"]},"metadata":{},"sourceType":"module"}