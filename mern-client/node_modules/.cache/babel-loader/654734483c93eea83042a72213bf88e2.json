{"ast":null,"code":"import _classCallCheck from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/eugene/MERN/mern-client/src/components/profiles/Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/spinner';\nimport { getProfiles } from '../../actions/profileAction';\nimport ProfileItem from './ProfileItem';\n\nvar Profiles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profiles, _Component);\n\n  function Profiles() {\n    _classCallCheck(this, Profiles);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profiles).apply(this, arguments));\n  }\n\n  _createClass(Profiles, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profiles = _this$props$profile.profiles,\n          loading = _this$props$profile.loading;\n      var profileItems;\n\n      if (profiles === null || loading) {\n        profileItems = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n      } //end if\n      else {\n          if (profiles.length > 0) {\n            profileItems = profiles.map(function (profile) {\n              return React.createElement(ProfileItem, {\n                key: profile._id,\n                profile: profile,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 22\n                },\n                __self: this\n              });\n            }); //end map()\n          } //end if\n          else {\n              profileItems = React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 26\n                },\n                __self: this\n              }, \"No Profiles Found\");\n            } //end else\n\n        } //end else\n\n\n      return React.createElement(\"div\", {\n        className: \"profiles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Developer Profiles\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Browse and connect with developers\"), profileItems)))); //end return \n    } //end render\n\n  }]);\n\n  return Profiles;\n}(Component); //end class Profiles\n\n\nProfiles.propTypes = {\n  profiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired //end default prop types\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n}; //end mapStateToProps\n\n\nexport default connect(mapStateToProps, {\n  getProfiles: getProfiles,\n  ProfileItem: ProfileItem\n})(Profiles);","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/components/profiles/Profiles.js"],"names":["React","Component","connect","PropTypes","Spinner","getProfiles","ProfileItem","Profiles","props","profile","profiles","loading","profileItems","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IACMC,Q;;;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWH,WAAX;AACH;;;6BACO;AAAA,gCACwB,KAAKG,KAAL,CAAWC,OADnC;AAAA,UACGC,QADH,uBACGA,QADH;AAAA,UACaC,OADb,uBACaA,OADb;AAEJ,UAAIC,YAAJ;;AACA,UAAGF,QAAQ,KAAK,IAAb,IAAqBC,OAAxB,EAAgC;AAC5BC,QAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AACH,OAFD,CAEC;AAFD,WAGI;AACI,cAAGF,QAAQ,CAACG,MAAT,GAAkB,CAArB,EAAuB;AAEvBD,YAAAA,YAAY,GAAIF,QAAQ,CAACI,GAAT,CAAa,UAAAL,OAAO;AAAA,qBAEhC,oBAAC,WAAD;AAAa,gBAAA,GAAG,EAAEA,OAAO,CAACM,GAA1B;AAA+B,gBAAA,OAAO,EAAEN,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFgC;AAAA,aAApB,CAAhB,CAFuB,CAKjB;AACL,WAND,CAMC;AAND,eAOI;AACAG,cAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAf;AACH,aAVL,CAUK;;AACJ,SAjBD,CAiBC;;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,EAGSA,YAHT,CADJ,CADJ,CADJ,CADJ,CAlBI,CA8BH;AACJ,K,CAAA;;;;;EAnCkBX,S,GAoCtB;;;AAEDM,QAAQ,CAACS,SAAT,GAAqB;AACjBN,EAAAA,QAAQ,EAAEP,SAAS,CAACc,IAAV,CAAeC,UADR;AAEjBT,EAAAA,OAAO,EAAEN,SAAS,CAACgB,MAAV,CAAiBD,UAFT,CAGpB;;AAHoB,CAArB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BZ,IAAAA,OAAO,EAAEY,KAAK,CAACZ;AADe,GAAL;AAAA,CAA7B,C,CAEE;;;AACF,eAAeP,OAAO,CAACkB,eAAD,EAAkB;AAAEf,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,WAAW,EAAXA;AAAf,CAAlB,CAAP,CAAuDC,QAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/spinner';\nimport { getProfiles } from '../../actions/profileAction';\nimport ProfileItem from './ProfileItem';\nclass Profiles extends Component {\n    componentDidMount(){\n        this.props.getProfiles();\n    }\n    render(){\n        const {profiles, loading} = this.props.profile;\n        let profileItems;\n        if(profiles === null || loading){\n            profileItems = <Spinner />;\n        }//end if\n        else{\n                if(profiles.length > 0){ \n\n                profileItems =  profiles.map(profile => \n                    (\n                    <ProfileItem key={profile._id} profile={profile}/>\n                    ))//end map()\n                }//end if\n                else{  \n                    profileItems = <h4>No Profiles Found</h4>\n                }//end else\n            }//end else\n        return (\n            <div className=\"profiles\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Developer Profiles</h1>\n                            <p className=\"lead text-center\">Browse and connect with developers</p>\n                                {profileItems}\n                        </div>\n                    </div>\n                </div>\n            </div> \n        )//end return \n    }//end render\n}//end class Profiles\n\nProfiles.propTypes = {\n    profiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}//end default prop types\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})//end mapStateToProps\nexport default connect(mapStateToProps, { getProfiles, ProfileItem })(Profiles);"]},"metadata":{},"sourceType":"module"}