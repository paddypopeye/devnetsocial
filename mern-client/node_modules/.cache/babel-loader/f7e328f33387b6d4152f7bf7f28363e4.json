{"ast":null,"code":"import _classCallCheck from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/eugene/MERN/mern-client/src/components/post/CommentFeed.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CommentItem from './CommentItem';\n\nvar CommentFeed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentFeed, _Component);\n\n  function CommentFeed() {\n    _classCallCheck(this, CommentFeed);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CommentFeed).apply(this, arguments));\n  }\n\n  _createClass(CommentFeed, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          comments = _this$props.comments,\n          postId = _this$props.postId;\n      return comments.map(function (comment) {\n        return React.createElement(CommentItem, {\n          key: comment._id,\n          comment: comment,\n          postId: postId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        });\n      }); //End map()\n    } //end render\n\n  }]);\n\n  return CommentFeed;\n}(Component);\n\n; //end Class CommentFeed\n\nCommentFeed.propTypes = {\n  comments: PropTypes.array.isRequired,\n  postId: PropTypes.string.isRequired //end propTypes\n\n};\nexport default CommentItem;","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/components/post/CommentFeed.js"],"names":["React","Component","PropTypes","CommentItem","CommentFeed","props","comments","postId","map","comment","_id","propTypes","array","isRequired","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,W;;;;;;;;;;;;;6BACK;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACIC,QADJ,eACIA,QADJ;AAAA,UACcC,MADd,eACcA,MADd;AAGP,aAAOD,QAAQ,CAACE,GAAT,CAAa,UAAAC,OAAO;AAAA,eACvB,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,OAAO,CAACC,GAA1B;AAA+B,UAAA,OAAO,EAAED,OAAxC;AAAiD,UAAA,MAAM,EAAEF,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,OAApB,CAAP,CAHO,CAKD;AACP,K,CAAA;;;;;EAPuBN,S;;AAQzB,C,CAAC;;AAGFG,WAAW,CAACO,SAAZ,GAAwB;AACpBL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,KAAV,CAAgBC,UADN;AAEpBN,EAAAA,MAAM,EAAEL,SAAS,CAACY,MAAV,CAAiBD,UAFL,CAGvB;;AAHuB,CAAxB;AAKA,eAAeV,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport CommentItem from './CommentItem';\n\nclass CommentFeed extends Component {\n  render() {\n        const {comments, postId } = this.props;\n\n    return comments.map(comment => (\n        <CommentItem key={comment._id} comment={comment} postId={postId} />\n        ))//End map()\n  }//end render\n};//end Class CommentFeed\n\n\nCommentFeed.propTypes = {\n    comments: PropTypes.array.isRequired,\n    postId: PropTypes.string.isRequired\n}//end propTypes\n\nexport default CommentItem;"]},"metadata":{},"sourceType":"module"}