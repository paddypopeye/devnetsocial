{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, GET_ERRORS, PROFILE_LOADING, CLEAR_CURRENT_PROFILE } from './types'; //Get the current profile\n\nexport var getCurrentProfile = function getCurrentProfile() {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get('/api/profile').then(function (res) {\n      return dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_PROFILE,\n        payload: {}\n      });\n    }); //end catch\n  };\n}; //ends getCurrentProfile\n//Set profile loading\n\nexport var setProfileLoading = function setProfileLoading() {\n  return {\n    type: PROFILE_LOADING\n  };\n};\nexport var createProfile = function createProfile(profileData, history) {\n  return function (dispatch) {\n    axios().post('/api/profile', profileData).then(function (res) {\n      return history.push('/dashboard');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    } //end dispatch\n    ); //end catch\n  };\n}; //end createProfile\n//Clear profile\n\nexport var clearCurrentProfile = function clearCurrentProfile() {\n  return {\n    type: CLEAR_CURRENT_PROFILE //end return\n\n  };\n}; //end clearCurrentProfile","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/actions/profileAction.js"],"names":["axios","GET_PROFILE","GET_ERRORS","PROFILE_LOADING","CLEAR_CURRENT_PROFILE","getCurrentProfile","dispatch","setProfileLoading","get","then","res","type","payload","data","catch","err","createProfile","profileData","history","post","push","response","clearCurrentProfile"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,eAAlC,EAAmDC,qBAAnD,QAAgF,SAAhF,C,CAEA;;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC/CA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AAEAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,cAAV,EACCC,IADD,CACM,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAAC;AAClBK,QAAAA,IAAI,EAAEV,WADY;AAElBW,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,OAAD,CAAZ;AAAA,KADT,EAICC,KAJD,CAIQ,UAAAC,GAAG,EAAI;AACXT,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEV,WADD;AAELW,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAGH,KARD,EAH+C,CAW7C;AACL,GAZgC;AAAA,CAA1B,C,CAYN;AAED;;AACA,OAAO,IAAML,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACnC,SAAM;AACFI,IAAAA,IAAI,EAAER;AADJ,GAAN;AAGF,CAJK;AAMN,OAAO,IAAMa,aAAa,GAAE,SAAfA,aAAe,CAACC,WAAD,EAAcC,OAAd;AAAA,SAA0B,UAAAZ,QAAQ,EAAI;AAC/DN,IAAAA,KAAK,GACJmB,IADD,CACM,cADN,EACsBF,WADtB,EAECR,IAFD,CAEM,UAAAC,GAAG;AAAA,aAAIQ,OAAO,CAACE,IAAR,CAAa,YAAb,CAAJ;AAAA,KAFT,EAGCN,KAHD,CAGO,UAAAC,GAAG;AAAA,aACNT,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAET,UADD;AAELU,QAAAA,OAAO,EAAEG,GAAG,CAACM,QAAJ,CAAaR;AAFjB,OAAD,CADF;AAAA,KAHV,CAOM;AAPN,MAD+D,CAS9D;AACH,GAV2B;AAAA,CAArB,C,CAUN;AAED;;AACD,OAAO,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC,SAAM;AACFX,IAAAA,IAAI,EAAEP,qBADJ,CAEL;;AAFK,GAAN;AAGF,CAJK,C,CAIL","sourcesContent":["import axios from 'axios';\nimport { GET_PROFILE, GET_ERRORS, PROFILE_LOADING, CLEAR_CURRENT_PROFILE } from './types';\n\n//Get the current profile\nexport const getCurrentProfile = () => dispatch => {\n    dispatch(setProfileLoading());\n\n    axios.get('/api/profile')\n    .then(res => dispatch({\n        type: GET_PROFILE,\n        payload: res.data}))\n    .catch( err => {\n        dispatch({\n            type: GET_PROFILE,\n            payload: {}})\n    })//end catch\n}//ends getCurrentProfile\n\n//Set profile loading\nexport const setProfileLoading = () => {\n    return{\n        type: PROFILE_LOADING\n    }\n }\n\n export const createProfile= (profileData, history) => dispatch => {\n    axios()\n    .post('/api/profile', profileData)\n    .then(res => history.push('/dashboard'))\n    .catch(err => \n        dispatch({\n            type: GET_ERRORS,   \n            payload: err.response.data\n        })//end dispatch\n    )//end catch\n }//end createProfile\n\n //Clear profile\nexport const clearCurrentProfile = () => {\n    return{\n        type: CLEAR_CURRENT_PROFILE\n    }//end return\n }//end clearCurrentProfile "]},"metadata":{},"sourceType":"module"}