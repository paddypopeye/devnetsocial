{"ast":null,"code":"import _defineProperty from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/eugene/MERN/mern-client/src/components/auth/Register.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this));\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    }; //end this.state\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    //end class Register\n    value: function componentDidMount() {\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push('/dashboard');\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value)); //end onChange\n    }\n  }, {\n    key: \"onSubmit\",\n    //end onChange\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      }; //end newUser\n\n      this.props.registerUser(newUser, this.props.history);\n    } //end onSubmit\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Create your Devel'd-In account\"), React.createElement(\"form\", {\n        noValidate: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.name\n        }),\n        placeholder: \"Name\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.onChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), errors.name && React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, errors.name)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.email\n        }),\n        placeholder: \"Email Address\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.onChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"), errors.email && React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, errors.email)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.password\n        }),\n        placeholder: \"Password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), errors.password && React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, errors.password)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": errors.password2\n        }),\n        placeholder: \"Confirm Password\",\n        name: \"password2\",\n        value: this.state.password2,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), errors.password2 && React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, errors.password2)), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))))); //end return\n    } //end render\n\n  }]);\n\n  return Register;\n}(Component); //end class Login\n\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/components/auth/Register.js"],"names":["React","Component","withRouter","classnames","connect","registerUser","PropTypes","Register","state","name","email","password","password2","errors","onChange","bind","onSubmit","props","auth","isAuthenticated","history","push","nextProps","setState","e","target","value","preventDefault","newUser","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nclass Register extends Component{\n    constructor(){\n        super();\n        this.state = {\n            name: '',\n            email:'',\n            password:'',\n            password2:'',\n            errors: {}\n        };//end this.state\n        \n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    };//end class Register\n\n    componentDidMount(){\n        if(this.props.auth.isAuthenticated){\n            this.props.history.push('/dashboard')\n\n        }\n        \n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({ errors: nextProps.errors })\n        }\n    }\n    \n    onChange(e){\n        this.setState({\n            [e.target.name]:e.target.value\n        })//end onChange\n    };//end onChange\n\n    onSubmit(e){\n        e.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };//end newUser\n        this.props.registerUser(newUser, this.props.history);\n        \n        \n    }//end onSubmit\n\n    render(){\n      const {errors} = this.state;\n      return(\n    <div className=\"register\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h1 className=\"display-4 text-center\">Sign Up</h1>\n                    <p className=\"lead text-center\">Create your Devel'd-In account</p>\n                        <form noValidate onSubmit={ this.onSubmit } >\n                            <div className=\"form-group\">\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\":errors.name\n                                })} placeholder=\"Name\" name=\"name\" value={this.state.name} onChange={this.onChange}  required />\n\n                                    {errors.name && (<div className=\"text-danger\">{errors.name}</div>)}\n                                \n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\":errors.email\n                                })} placeholder=\"Email Address\" name=\"email\" value={this.state.email} onChange={this.onChange} required/>\n                                <small className=\"form-text text-muted\">This site uses Gravatar so if you want a profile image, use a Gravatar email</small>\n                                {errors.email &&(<div className=\"text-danger\">{errors.email}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\":errors.password\n                                })} placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                                {errors.password &&(<div className=\"text-danger\">{errors.password}</div>)}\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\":errors.password2\n                                })} placeholder=\"Confirm Password\" name=\"password2\" value={this.state.password2} onChange={this.onChange}/>\n                                {errors.password2 &&(<div className=\"text-danger\">{errors.password2}</div>)}\n                            </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                        </form>\n                </div>\n            </div>\n        </div>\n  </div>\n        )//end return\n    }//end render\n}//end class Login\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(mapStateToProps,{registerUser})(withRouter(Register));"]},"metadata":{},"sourceType":"module"}