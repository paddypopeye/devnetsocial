{"ast":null,"code":"var _jsxFileName = \"/home/eugene/MERN/mern-client/src/components/common/SelectListGroup.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar SelectListGroup = function SelectListGroup(_ref) {\n  var error = _ref.error,\n      info = _ref.info,\n      name = _ref.name,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      options = _ref.options;\n  var selectOptions = options.map(function (option) {\n    return React.createElement(\"option\", {\n      key: option.label,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, option.label);\n  } //end option\n  ); //end map()\n\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }) //end className\n    ,\n    name: name,\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, selectOptions), info && React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, info), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, error));\n};\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectListGroup;","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/components/common/SelectListGroup.js"],"names":["React","classnames","PropTypes","SelectListGroup","error","info","name","placeholder","value","onChange","options","selectOptions","map","option","label","propTypes","string","isRequired","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OASlB;AAAA,MARFC,KAQE,QARFA,KAQE;AAAA,MAPFC,IAOE,QAPFA,IAOE;AAAA,MANFC,IAME,QANFA,IAME;AAAA,MALFC,WAKE,QALFA,WAKE;AAAA,MAJFC,KAIE,QAJFA,KAIE;AAAA,MAHFC,QAGE,QAHFA,QAGE;AAAA,MAFFC,OAEE,QAFFA,OAEE;AACN,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM;AAAA,WACpC;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,MAAA,KAAK,EAAED,MAAM,CAACL,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACaK,MAAM,CAACC,KADpB,CADoC;AAAA,GAAlB,CAIrB;AAJqB,GAAtB,CADM,CAMJ;;AACF,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,SAAS,EACLb,UAAU,CAAC,8BAAD,EAAiC;AACvC,oBAAcG;AADyB,KAAjC,CAFd,CAIO;AAJP;AAKA,IAAA,IAAI,EAAKE,IALT;AAMA,IAAA,KAAK,EAAKE,KANV;AAOA,IAAA,QAAQ,EAAKC,QAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAO0BE,aAP1B,CADJ,EAUKN,IAAI,IAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAVb,EAWKD,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAXd,CADJ;AAcE,CA9BF;;AAgCAD,eAAe,CAACY,SAAhB,GAA4B;AACxBT,EAAAA,IAAI,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UADC;AAExBT,EAAAA,KAAK,EAAEN,SAAS,CAACc,MAAV,CAAiBC,UAFA;AAGxBZ,EAAAA,IAAI,EAAEH,SAAS,CAACc,MAHQ;AAIxBZ,EAAAA,KAAK,EAAEF,SAAS,CAACc,MAJO;AAKxBP,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UALD;AAMxBP,EAAAA,OAAO,EAAER,SAAS,CAACiB,KAAV,CAAgBF;AAND,CAA5B;AASA,eAAed,eAAf","sourcesContent":["import React from 'react';\nimport classnames from'classnames';\nimport PropTypes from 'prop-types';\n\nconst SelectListGroup = ({\n    error,\n    info,\n    name,\n    placeholder,\n    value,    \n    onChange,\n    options\n\n}) => {\nconst selectOptions = options.map(option => (\n    <option key={option.label} value={option.value}>\n                {option.label}\n    </option>\n)//end option\n);//end map()\nreturn (\n    <div className=\"form-group\">\n        <select\n        className = {\n            classnames('form-control form-control-lg', {\n                'is-invalid': error\n            })}//end className\n        name = { name }\n        value = { value }\n        onChange = { onChange }>{ selectOptions }</select>\n        \n        {info && <small className=\"form-text text-muted\">{info}</small>}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n)}; \n\nSelectListGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    error: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n};\n\nexport default SelectListGroup;"]},"metadata":{},"sourceType":"module"}