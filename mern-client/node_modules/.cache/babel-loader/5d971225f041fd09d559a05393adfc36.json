{"ast":null,"code":"import _classCallCheck from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/eugene/MERN/mern-client/src/components/profile/ProfileGithub.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Profile from './Profile';\nimport PropTypes from 'prop-types';\n\nvar ProfileGithub =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileGithub, _Component);\n\n  function ProfileGithub(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileGithub);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileGithub).call(this, props));\n    _this.state = {\n      clientID: '70e0b65ec95004e47fe4',\n      clientSecret: '6f64848f20eb7b7054f78488a69c17d9f1daa39e',\n      count: 4,\n      sort: 'created asc',\n      repos: []\n    };\n    return _this;\n  }\n\n  _createClass(ProfileGithub, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = this.props.username;\n      var _this$state = this.state,\n          count = _this$state.count,\n          sort = _this$state.sort,\n          clientID = _this$state.clientID,\n          clientSecret = _this$state.clientSecret;\n      fetch(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=\").concat(count, \"&sort=\").concat(sort, \"&client_id=\").concat(clientID, \"&client_secret=\").concat(clientSecret)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          repos: data\n        });\n\n        console.log(_this2.repos);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var repos = this.state.repos;\n      var repoItems = repos.map(function (repo) {\n        return React.createElement(\"div\", {\n          key: repo.id,\n          className: \"card card-body mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: repo.html_url,\n          className: \"text-info\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, repo.name)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, repo.description)), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Stars: \", React.createElement(\"span\", {\n          className: \"badge badge-info mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, repo.stargazers_count)), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Watchers: \", React.createElement(\"span\", {\n          className: \"badge badge-secondary mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, repo.watchers_count)), React.createElement(\"div\", {\n          className: \"col-md-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Forks: \", React.createElement(\"span\", {\n          className: \"badge badge-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, repo.forks_count))));\n      }); //end render\n\n      return React.createElement(\"div\", {\n        ref: \"myref\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Github Repos\"), repoItems);\n    }\n  }]);\n\n  return ProfileGithub;\n}(Component);\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default ProfileGithub;","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/components/profile/ProfileGithub.js"],"names":["React","Component","Link","Profile","PropTypes","ProfileGithub","props","state","clientID","clientSecret","count","sort","repos","username","fetch","then","res","json","data","setState","console","log","catch","err","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport Profile from './Profile';\nimport PropTypes from 'prop-types';\n\nclass ProfileGithub extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      clientID:'70e0b65ec95004e47fe4',\n      clientSecret:'6f64848f20eb7b7054f78488a69c17d9f1daa39e',\n      count: 4,\n      sort: 'created asc',\n      repos: []\n    }\n  }\n  componentDidMount(){\n    const { username } = this.props;\n    const  {count, sort, clientID, clientSecret} = this.state;\n    \n    fetch(`https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientID}&client_secret=${clientSecret}`)\n    .then(res => res.json())\n    .then(data => {\n      \n        this.setState({repos: data}) \n        console.log(this.repos)\n      \n        \n    }).catch(err => console.log(err))\n\n  }\n  render() {\n\n     const {repos} = this.state;\n     const repoItems = repos.map(repo => (\n       <div key={repo.id} className=\"card card-body mb-2\">\n            <div className=\"row\" >\n              <div className=\"col-md-6\">\n                   <h4>\n                     <Link to={repo.html_url} className=\"text-info\" target=\"_blank\">\n                                {repo.name}\n                     </Link>\n                    </h4>\n                   <p>{repo.description}</p>\n              </div>\n              <div className=\"col-md-6\">\n                  Stars: <span className=\"badge badge-info mr-1\">{repo.stargazers_count}</span>\n              </div>\n              <div className=\"col-md-6\">\n                  Watchers: <span className=\"badge badge-secondary mr-1\">{repo.watchers_count}</span>\n              </div>\n              <div className=\"col-md-6\">\n                  Forks: <span className=\"badge badge-success\">{repo.forks_count}</span>\n              </div>\n            </div>\n       </div>\n     ))//end render\n\n     return (\n       <div ref='myref'>\n         <hr/>\n         <h3 className='mb-4'>Github Repos</h3>\n              {repoItems}\n       </div>\n     )\n   }\n }\n\n ProfileGithub.propTypes = {\n   username: PropTypes.string.isRequired\n } \n\nexport default  ProfileGithub;"]},"metadata":{},"sourceType":"module"}