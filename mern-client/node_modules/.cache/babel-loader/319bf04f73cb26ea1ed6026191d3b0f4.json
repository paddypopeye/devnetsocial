{"ast":null,"code":"import _classCallCheck from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eugene/MERN/mern-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/eugene/MERN/mern-client/src/components/posts/Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostForm from './PostForm';\nimport PostFeed from './PostFeed';\nimport Spinner from '../common/spinner';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport { getPosts } from '../../actions/postActions';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts() {\n    _classCallCheck(this, Posts);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Posts).apply(this, arguments));\n  }\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPosts();\n    } //end componentDidMount\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$post = this.props.post,\n          posts = _this$props$post.posts,\n          loading = _this$props$post.loading;\n      var postContent;\n      posts === null || loading ? postContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }) : postContent = React.createElement(PostFeed, {\n        posts: posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"conatainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(PostForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), postContent)))); //end return \n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nPosts.protoTypes = {\n  post: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired //end prop types\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n}; //end mapStateToProps\n\n\nexport default connect(mapStateToProps, {\n  getPosts: getPosts\n})(Posts);","map":{"version":3,"sources":["/home/eugene/MERN/mern-client/src/components/posts/Posts.js"],"names":["React","Component","PropTypes","connect","PostForm","PostFeed","Spinner","TextAreaFieldGroup","getPosts","Posts","props","post","posts","loading","postContent","protoTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,SAASC,QAAT,QAAyB,2BAAzB;;IAGMC,K;;;;;;;;;;;;;wCAEe;AACjB,WAAKC,KAAL,CAAWF,QAAX;AACD,K,CAAA;;;;6BAEQ;AAAA,6BACmB,KAAKE,KAAL,CAAWC,IAD9B;AAAA,UACCC,KADD,oBACCA,KADD;AAAA,UACQC,OADR,oBACQA,OADR;AAEP,UAAIC,WAAJ;AACAF,MAAAA,KAAK,KAAK,IAAV,IAAkBC,OAAlB,GAA4BC,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1C,GAAwDA,WAAW,GAAG,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtE;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAECE,WAFD,CADF,CADF,CADF,CADF,CALO,CAgBN;AACF;;;;EAvBiBb,S;;AA0BpBQ,KAAK,CAACM,UAAN,GAAmB;AACjBJ,EAAAA,IAAI,EAAET,SAAS,CAACc,MAAV,CAAiBC,UADN;AAEjBT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,IAAV,CAAeD,UAFR,CAGlB;;AAHkB,CAAnB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADoB,GAAL;AAAA,CAA7B,C,CAEG;;;AAEH,eAAeR,OAAO,CAACgB,eAAD,EAAkB;AAACX,EAAAA,QAAQ,EAARA;AAAD,CAAlB,CAAP,CAAqCC,KAArC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostForm from './PostForm';\nimport PostFeed from './PostFeed';\nimport Spinner from '../common/spinner';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport { getPosts } from '../../actions/postActions';\n\n\nclass Posts extends Component {\n  \n  componentDidMount(){\n    this.props.getPosts();\n  }//end componentDidMount\n\n  render() {\n    const { posts, loading} = this.props.post;\n    let postContent;\n    posts === null || loading ? postContent = <Spinner /> : postContent = <PostFeed posts={posts} />\n    \n    return (\n      <div className=\"feed\">\n        <div className=\"conatainer\">\n          <div className=\"row\"> \n            <div className=\"col-md-12\">\n            <PostForm />\n            {postContent}\n            </div>       \n          </div>\n        </div>\n      </div>\n    )//end return \n  }\n}\n\nPosts.protoTypes = {\n  post: PropTypes.object.isRequired,\n  getPosts: PropTypes.func.isRequired\n}//end prop types\n\nconst mapStateToProps = state => ({\n  post: state.post\n});//end mapStateToProps\n\nexport default connect(mapStateToProps, {getPosts})(Posts);"]},"metadata":{},"sourceType":"module"}